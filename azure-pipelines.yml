# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: Maven@3
  displayName: Build Code
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'package'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: jaCoCo
    
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'sivaone'
    scannerMode: 'Other'
    extraProperties: 'sonar.projectKey=sv-devops'
- task: Maven@3
  displayName: Run Sonar scan
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean verify sonar:sonar'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: JaCoCo
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'

- task: WhiteSource@21
  displayName: WhiteSource SCA
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)'
    projectName: 'sv-devops'

- task: DownloadSecureFile@1
  displayName: Get maven settings
  name: mvnSettings
  inputs:
    secureFile: 'settings.xml'
    retryCount: '3'
    socketTimeout: '500'

- task: Maven@3
  displayName: Publish maven Artifact
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'deploy'
    options: '-B -s $(mvnSettings.secureFilePath) -DfeedAccessToken=${feedAccessToken}'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: true

- task: Maven@3
  displayName: Build Docker image
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'spring-boot:build-image'
    publishJUnitResults: false
    jdkVersionOption: '1.11'

- task: ArtifactoryDocker@1
  displayName: Push Docker iamge
  inputs:
    command: 'push'
    artifactoryService: 'JFrog sivaone'
    targetRepo: 'default-docker-local'
    imageName: 'sivaone.jfrog.io/default-docker-local/devops1:0.0.1-SNAPSHOT'
    
# - task: AzureRmWebAppDeployment@4
#   inputs:
#     ConnectionType: 'AzureRM'
#     azureSubscription: 'azure-webapp-devops1'
#     appType: 'webAppLinux'
#     WebAppName: 'sv-devops1'
#     packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.jar'
#     RuntimeStack: 'JAVA|11-java11'
#     StartupCommand: 'java -jar -Dserver.port=80 /home/site/wwwroot/devops1-0.0.1-SNAPSHOT.jar'
